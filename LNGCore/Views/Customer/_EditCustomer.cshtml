@model LNGCore.UI.Models.Admin.EditCustomerViewModel
<script>
    function showTaxId(checkbox) {
        var isTaxable = $(checkbox).prop("checked");

        if (isTaxable) {
            $("#taxIdGroup").hide();
            $("#Customer_TaxId").attr("data-val", false).removeClass("required");
        } else {
            $("#taxIdGroup").show();
            $("#Customer_TaxId").attr("data-val", true).addClass("required");
        }
    }

    function submitForm() {
        var fromAjax = @(Model.fromAjax.ToString().ToLower());
        if (isValid()) {
            if (fromAjax) {
                submitFromAjax();
            } else {
                $("#formEditCustomer").submit();
            }
        }
    }

    function submitFromAjax() {
        $.ajax({
        url:"@Url.Action("EditCustomerAjax", "Customer")",
        type:'post',
            data: $('#formEditCustomer').serialize(),
            success: function (customer) {
                $("#customerModal").modal("hide");
                $("[name='Invoice.CustomerId']").append("<option value=" + customer.item1 + ">" + customer.item2 + "</option>")
                $("[name='Invoice.CustomerId']").val(customer.item1).trigger("change");
        }
    });
    }

    function isValid() {
        var valid = $("#formEditCustomer").valid();
        debugger;
        return valid;
    }
</script>

@using (Html.BeginForm("EditCustomer", "Customer", FormMethod.Post, new { id = "formEditCustomer" }))
{
    @Html.HiddenFor(f => f.Customer.Id)
    <div class="card m-0">
        <div class="card-header">
            <h4 class="m-0">@(Model.Customer.Id == 0 ? "Add New Contact" : $"Edit {(!string.IsNullOrWhiteSpace(Model.Customer.DisplayName) ? Model.Customer.DisplayName : "Customer")}")</h4>
        </div>
        <div class="card-body">
            <div class="card bg-info text-white">
                <div class="card-body p-2">
                    <strong>Contact Name</strong> is the only required field. If the user is tax-exempt, we require a <strong>Tax ID</strong>.
                </div>
            </div>
            <div class="row pt-3">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(f => f.Customer.Name)
                        @Html.TextBoxFor(f => f.Customer.Name, new { @class = "form-control form-control-sm" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(f => f.Customer.BusinessName)
                        @Html.TextBoxFor(f => f.Customer.BusinessName, new { @class = "form-control form-control-sm" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(f => f.Customer.Email)
                        @Html.TextBoxFor(f => f.Customer.Email, new { @class = "form-control form-control-sm" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(f => f.Customer.SecondaryEmail)
                        @Html.TextBoxFor(f => f.Customer.SecondaryEmail, new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(f => f.Customer.SecondaryEmail)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(f => f.Customer.BusinessPhone)
                        @Html.TextBoxFor(f => f.Customer.BusinessPhone, new { @class = "form-control form-control-sm" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(f => f.Customer.AltPhone)
                        @Html.TextBoxFor(f => f.Customer.AltPhone, new { @class = "form-control form-control-sm" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(f => f.Customer.Street)
                        @Html.TextBoxFor(f => f.Customer.Street, new { @class = "form-control form-control-sm" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(f => f.Customer.PostBox)
                        @Html.TextBoxFor(f => f.Customer.PostBox, new { @class = "form-control form-control-sm" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(f => f.Customer.City)
                        @Html.TextBoxFor(f => f.Customer.City, new { @class = "form-control form-control-sm" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(f => f.Customer.State)
                        @Html.TextBoxFor(f => f.Customer.State, new { @class = "form-control form-control-sm" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(f => f.Customer.ZipCode)
                        @Html.TextBoxFor(f => f.Customer.ZipCode, new { @class = "form-control form-control-sm" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(f => f.Customer.Taxable)
                @Html.CheckBoxFor(f => f.Customer.Taxable, new { @class = "checkbox-lg", onchange = "showTaxId(this);" })
            </div>
            <div class="form-group" id="taxIdGroup" style="@(Model.Customer.Taxable ? "display: none;" : "")">
                @Html.LabelFor(f => f.Customer.TaxId)
                @Html.TextBoxFor(f => f.Customer.TaxId, new { @class = "form-control form-control-sm", data_val = "false", data_val_required = "The email is required" })
            </div>
            <div class="text-center">
                <button type="button" onclick="submitForm();" class="btn btn-sm btn-success">Save Contact</button>
                <button type="button" data-dismiss="modal" class="btn btn-sm btn-secondary">Cancel</button>
                <div>
                    @Html.ValidationSummary()
                </div>
            </div>
        </div>
    </div>
    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }
}